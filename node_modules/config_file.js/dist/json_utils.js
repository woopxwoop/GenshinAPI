"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isJsonElement = exports.isJsonArray = exports.isJsonObject = exports.defaultJsonOptions = exports.isFlexJsonArray = exports.isFlexJsonObject = exports.isFlexJsonElement = void 0;
function isFlexJsonElement(options, value) {
    const type = typeof value;
    if (type === "number" || type === "boolean" || type === "string" || value === null)
        return true;
    if (options.allowBigint && type === "bigint")
        return true;
    if (type !== "object" || value === undefined)
        return false;
    if (Array.isArray(value)) {
        return value.every(e => isFlexJsonElement(e, options));
    }
    else {
        return Object.values(value).every(v => isFlexJsonElement(v, options));
    }
}
exports.isFlexJsonElement = isFlexJsonElement;
function isFlexJsonObject(options, value) {
    const type = typeof value;
    if (type !== "object" || value === null || value === undefined)
        return false;
    if (Array.isArray(value))
        return false;
    return Object.values(value).every(v => isFlexJsonElement(v, options));
}
exports.isFlexJsonObject = isFlexJsonObject;
function isFlexJsonArray(options, value) {
    const type = typeof value;
    if (type !== "object" || value === null || value === undefined)
        return false;
    if (!Array.isArray(value))
        return false;
    return value.every(e => isFlexJsonElement(e, options));
}
exports.isFlexJsonArray = isFlexJsonArray;
exports.defaultJsonOptions = {
    allowBigint: false,
};
function isJsonObject(value) {
    return isFlexJsonObject(exports.defaultJsonOptions, value);
}
exports.isJsonObject = isJsonObject;
function isJsonArray(value) {
    return isFlexJsonArray(exports.defaultJsonOptions, value);
}
exports.isJsonArray = isJsonArray;
function isJsonElement(value) {
    return isFlexJsonElement(exports.defaultJsonOptions, value);
}
exports.isJsonElement = isJsonElement;
