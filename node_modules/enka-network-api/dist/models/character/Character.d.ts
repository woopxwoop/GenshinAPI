import { Artifact } from "../artifact/Artifact";
import { CharacterData } from "./CharacterData";
import { Weapon } from "../weapon/Weapon";
import { CharacterStats } from "./CharacterStats";
import { SkillLevel } from "./talents/SkillLevel";
import { UpgradableSkill } from "./talents/UpgradableSkill";
import { JsonObject } from "config_file.js";
import { EnkaClient } from "../../client/EnkaClient";
import { Costume } from "./Costume";
import { Constellation } from "./Constellation";
import { PassiveTalent } from "./talents/PassiveTalent";
import { IGOODComponentResolvable } from "../good/IGOODResolvable";
import { ICharacter } from "../good/GOOD";
export declare class Character implements IGOODComponentResolvable<ICharacter> {
    readonly enka: EnkaClient;
    readonly characterData: CharacterData;
    readonly costume: Costume;
    readonly artifacts: Artifact[];
    readonly weapon: Weapon;
    readonly stats: CharacterStats;
    readonly level: number;
    readonly xp: number;
    readonly ascension: number;
    readonly maxLevel: number;
    readonly stamina: number;
    /** Traveler's friendship is always 1 */
    readonly friendship: number;
    readonly unlockedConstellations: Constellation[];
    readonly skillLevels: {
        skill: UpgradableSkill;
        level: SkillLevel;
    }[];
    readonly unlockedPassiveTalents: PassiveTalent[];
    readonly _data: JsonObject;
    constructor(data: JsonObject, enka: EnkaClient);
    toGOOD(): ICharacter;
}
