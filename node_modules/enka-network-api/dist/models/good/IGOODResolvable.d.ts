import { FightProp } from "../StatProperty";
import { EquipType } from "../artifact/ArtifactData";
import { IGOODComponent, SlotKey, StatKey } from "./GOOD";
export interface IGOODComponentResolvable<T extends IGOODComponent> {
    toGOOD(): T;
}
export declare function convertToGOODKey<T extends string>(name: string): T;
export declare const artifactSlotMap: {
    readonly EQUIP_BRACER: "flower";
    readonly EQUIP_NECKLACE: "plume";
    readonly EQUIP_SHOES: "sands";
    readonly EQUIP_RING: "goblet";
    readonly EQUIP_DRESS: "circlet";
};
export declare function convertToGOODArtifactSlotKey(slot: EquipType): SlotKey;
export declare const statKeyMap: {
    readonly hp: "FIGHT_PROP_HP";
    readonly hp_: "FIGHT_PROP_HP_PERCENT";
    readonly atk: "FIGHT_PROP_ATTACK";
    readonly atk_: "FIGHT_PROP_ATTACK_PERCENT";
    readonly def: "FIGHT_PROP_DEFENSE";
    readonly def_: "FIGHT_PROP_DEFENSE_PERCENT";
    readonly eleMas: "FIGHT_PROP_ELEMENT_MASTERY";
    readonly enerRech_: "FIGHT_PROP_CHARGE_EFFICIENCY";
    readonly heal_: "FIGHT_PROP_HEAL_ADD";
    readonly critRate_: "FIGHT_PROP_CRITICAL";
    readonly critDMG_: "FIGHT_PROP_CRITICAL_HURT";
    readonly physical_dmg_: "FIGHT_PROP_PHYSICAL_ADD_HURT";
    readonly anemo_dmg_: "FIGHT_PROP_WIND_ADD_HURT";
    readonly geo_dmg_: "FIGHT_PROP_ROCK_ADD_HURT";
    readonly electro_dmg_: "FIGHT_PROP_ELEC_ADD_HURT";
    readonly hydro_dmg_: "FIGHT_PROP_WATER_ADD_HURT";
    readonly pyro_dmg_: "FIGHT_PROP_FIRE_ADD_HURT";
    readonly cryo_dmg_: "FIGHT_PROP_ICE_ADD_HURT";
    readonly dendro_dmg_: "FIGHT_PROP_GRASS_ADD_HURT";
};
export declare function convertToGOODStatKey(stat: FightProp): StatKey;
