"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const EnkaSystem_1 = require("../client/EnkaSystem");
/**
 * The game account added to the Enka.Network account.
 */
class EnkaGameAccount {
    /**
     * @param data
     * @param system
     * @param username
     */
    constructor(system, data, username) {
        this.system = system;
        this._data = data;
        this.username = username;
        const json = new config_file_js_1.JsonReader(config_file_js_1.defaultJsonOptions, this._data);
        this.hash = json.getAsString("hash");
        this.hoyoType = json.getAsNumber("hoyo_type");
        const library = system.getLibrary(this.hoyoType);
        this.user = library ? library.getUser(data) : null;
        this.uid = json.getAsNumberWithDefault(null, "uid");
        this.isVerified = json.getAsBoolean("verified");
        this.isPublic = json.getAsBoolean("public");
        this.isUidPublic = json.getAsBoolean("uid_public");
        this.isLivePublic = json.getAsBoolean("live_public");
        this.verificationCode = json.getAsStringWithDefault(null, "verification_code");
        this.verificationExpires = json.has("verification_expire") ? new Date(json.getAsNumber("verification_expire")) : null;
        this.verificationCodeRetries = json.getAsNumberWithDefault(null, "verification_code_retries");
        this.region = json.getAsString("region");
        this.order = json.getAsNumber("order");
        this.characterOrder = json.getValue("avatar_order");
        this.url = `${EnkaSystem_1.default.enkaUrl}/u/${username}/${this.hash}/`;
    }
    /**
     * @returns the game character builds including saved builds in the Enka.Network game account
     */
    fetchBuilds() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.system.fetchEnkaCharacterBuilds(this.username, this.hash);
        });
    }
}
exports.default = EnkaGameAccount;
