"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchJson = void 0;
const axios_1 = require("axios");
/**
 * @param url
 * @param enableTimeout
 */
function fetchJson(url, system, enableTimeout = false) {
    return __awaiter(this, void 0, void 0, function* () {
        const headers = { "User-Agent": system.options.userAgent };
        const options = { headers };
        if (enableTimeout)
            options.timeout = system.options.requestTimeout;
        const res = yield (() => __awaiter(this, void 0, void 0, function* () {
            try {
                return yield axios_1.default.get(url, options);
            }
            catch (e) {
                if (typeof e === "object" && e && "response" in e)
                    return e.response;
                else
                    throw e;
            }
        }))();
        if (res.data) {
            try {
                res.data = JSON.parse(res.data);
            }
            catch (e) {
                // do not parse if it is not json due to some error
            }
        }
        return res;
    });
}
exports.fetchJson = fetchJson;
